import { parseNorgToHtml } from "./parser";


const TEMPLATE = `
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>{{title}}</title>
    <link rel="stylesheet" href="style.css">
    <style>
        body { font-family: Arial, sans-serif; line-height: 1.6; padding: 20px; }
        h1 { color: #333; }
        ul, ol { padding-left: 20px; }
        .task { margin: 5px 0; padding: 5px; border: 1px solid #ccc; border-radius: 3px; }
        .todo-undone { background-color: #f9f9f9; }
        .todo-done { background-color: #d4edda; text-decoration: line-through; }
        .todo-urgent { background-color: #f8d7da; font-weight: bold; }
    </style>
</head>
<body>
    <header>
        <h1>{{title}}</h1>
    </header>
    <main>
        {{content}}
    </main>
    <footer>
        <p>Generated by norgkyll</p>
    </footer>
</body>
</html>
`;

/**
* Renders the Norg content as a complete HTML page.
* @param norgContent The content in Neorg format.
* @param title The title of the page.
* @returns The complete HTML as a string.
*/
export function renderPage(norgContent: string, title: string = "Neorg Page"): string {
    
    const htmlContent = parseNorgToHtml(norgContent);

    
    const renderedPage = TEMPLATE
        .replace("{{title}}", escapeHtml(title))
        .replace("{{content}}", htmlContent);

    return renderedPage;
}

/**
* Escapes dangerous HTML characters in the title.
* @param text The text to be escaped.
* @returns The escaped text.
*/
function escapeHtml(text: string): string {
    return text.replace(/&/g, "&amp;")
        .replace(/</g, "&lt;")
        .replace(/>/g, "&gt;")
        .replace(/"/g, "&quot;")
        .replace(/'/g, "&#039;");
}

